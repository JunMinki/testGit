package kr.co.softsoldesk.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.co.softsoldesk.beans.ContentBean;
import kr.co.softsoldesk.service.BoardService;

@Controller
@RequestMapping("/board")
public class BoardController {

	@Autowired
	BoardService boardService;

	@GetMapping("/main")
	private String main(@RequestParam("board_info_idx") int board_info_idx, Model model) {
		// 게시글 index 번호 가져오기

		String boardInfoName = boardService.getBoardInfoName(board_info_idx);// 게시판 이름

		List<ContentBean> contentList = boardService.getContentList(board_info_idx);// 게시판 게시글들

		model.addAttribute("board_info_idx", board_info_idx);
		model.addAttribute("board_info_name", boardInfoName);
		model.addAttribute("contentList", contentList);

		return "board/main";
	}

	@GetMapping("/read") // RequestParam을 선언해줌으로써 주소값(패러미터)에 표기해줌
	private String read(@RequestParam("content_idx") int content_idx,
			@RequestParam("board_info_idx") int board_info_idx, Model model) {

		ContentBean readContentBean = boardService.getContentInfo(content_idx);
		model.addAttribute("content", readContentBean);

		model.addAttribute("board_info_idx", board_info_idx);
		model.addAttribute("content_idx", content_idx);
		
		return "board/read";
	}

	@GetMapping("/write")
	private String write(@ModelAttribute("writeContentBean") ContentBean writeContentBean,
			@RequestParam("board_info_idx") int board_info_idx, Model model) {

		writeContentBean.setContent_board_idx(board_info_idx);

		return "board/write";
	}

	@PostMapping("/write_pro")
	private String write_pro(@Valid @ModelAttribute("writeContentBean") ContentBean writeContentBean,
			BindingResult result) {
		if (result.hasErrors()) {

			return "board/write";
		}

		boardService.addConetentInfo(writeContentBean);

		return "board/write_success";
	}

	@GetMapping("/modify")
	private String modify(@RequestParam("content_idx") int content_idx,
						  @RequestParam("board_info_idx") int board_info_idx, Model model) {

		ContentBean modifyContentBean = boardService.getContentInfo(content_idx);
		model.addAttribute("modifyContentBean", modifyContentBean);
		return "board/modify";
	}
	
	@PostMapping("/modify_pro")
	private String modify_pro(@Valid @ModelAttribute("modifyContentBean") ContentBean modifyContentBean,
			BindingResult result) {
		
		if (result.hasErrors()) {
			System.out.println("에러발생");
			return "board/modify";
			
		}
		
		boardService.modifyContentInfo(modifyContentBean);
		System.out.println(modifyContentBean.getContent_idx());
		System.out.println(modifyContentBean.getContent_subject());		
		return "board/modify_success";
	}

	@GetMapping("/delete")
	private String delete(@RequestParam("content_idx") int content_idx, Model model) {
		
		ContentBean contentDelete = boardService.contentDelete(content_idx);
		model.addAttribute("contentDelete", contentDelete);
		
		return "board/delete";
	}
}
